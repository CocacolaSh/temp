@{
    Layout = null;
}
@model Ocean.Entity.Branch
<!DOCTYPE>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>在线地图</title>
    <script type="text/javascript" src="@Url.Content("~/Content/jquery-easyui-1.3.5/jquery.min.js")"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=1.5&ak=4a10f19450d4388683d71f31614b5234"></script>
    <style type="text/css">
        a:link
        {
            text-decoration: none;
        }
        a:visited
        {
            text-decoration: none;
        }
        a:hover
        {
            text-decoration: none;
        }
        a:active
        {
            text-decoration: none;
        }
        .head_bg
        {
            z-index: 3;
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            width: 100%;
            min-width: 320px;
            height: 46px;
            line-height: 46px;
            margin: 0 auto;
            box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.15);
            border-bottom: 1px solid #d1d1d1;
            background: linear-gradient(#fff, #f9f9f9);
            display: block;
        }
        #popmenu
        {
            position: relative;
            width: 200px;
            margin: 0 auto;
            text-align: center;
            cursor: pointer;
            display: block;
        }
        #popmenu:after
        {
            position: absolute;
            right: 50px;
            top: 50%;
            width: 0;
            height: 0;
            border-color: #9d9d9d transparent;
            border-style: solid;
            border-width: 5px 5px 0;
            content: "";
            margin-top: -2px;
        }
        .ui-title
        {
            min-height: 46px;
            font-size: 1em;
            font-weight: normal;
            margin: 10px 70px 0;
            padding: 0;
            text-indent: -10px;
            white-space: nowrap;
            text-overflow: ellipsis;
            text-align: center;
            display: none;
            overflow: hidden;
        }
        .return
        {
            position: absolute;
            top: 0;
            left: 10px;
            height: 28px;
            line-height: 28px;
            padding: 0 12px;
            text-align: center;
            color: #484F55;
            font-size: 14px;
            margin: 7px 7px 0 0;
            background: #f3f3f3;
            border-radius: 4px;
            border: 1px solid #c1c1c1;
            background-image: -moz-linear-gradient(top, #fafafa, #ececec);
            background-image: -webkit-linear-gradient(top, #fafafa, #ececec);
            display: inline-block;
        }
        .return:hover, .btn_right:hover
        {
            background: -moz-linear-gradient(top, #ececec, #fafafa);
            background: -webkit-linear-gradient(top, #ececec, #fafafa);
        }
        .btn_right
        {
            position: absolute;
            top: 0;
            right: 10px;
            height: 28px;
            line-height: 28px;
            padding: 0 12px;
            text-align: center;
            color: #484F55;
            font-size: 14px;
            margin: 7px 7px 0 0;
            background: #f3f3f3;
            border-radius: 4px;
            border: 1px solid #c1c1c1;
            background-image: -moz-linear-gradient(top, #fafafa, #ececec);
            background-image: -webkit-linear-gradient(top, #fafafa, #ececec);
            display: inline-block;
        }
        #overlay
        {
            z-index: 4;
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            opacity: 0;
            background: #fff;
            display: none;
        }
        #win
        {
            z-index: 5;
            position: absolute;
            width: 150px;
            top: 55px;
            left: 50%;
            margin: 0 0 0 -75px;
            display: none;
        }
        .dropdown:before
        {
            position: absolute;
            content: "";
            width: 0;
            height: 0;
            right: 65px;
            bottom: 100%;
            border-width: 0 8px 8px;
            border-style: solid;
            border-color: rgba(0, 0, 0, 0.1) transparent;
        }
        .clr
        {
            height: 0;
            display: block;
            overflow: hidden;
            clear: both;
        }
        .dropdown
        {
            position: relative;
            padding: 5px;
            margin: 0 auto;
            border-radius: 7px;
            box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.15);
            border: 1px solid rgba(0, 0, 0, 0.15);
            background: #2f2f2f;
            cursor: pointer;
            display: block;
        }
        .dropdown:after
        {
            position: absolute;
            content: "";
            width: 0;
            height: 0;
            right: 67px;
            bottom: 100%;
            border-style: solid;
            border-width: 0 6px 6px;
            border-color: rgba(47, 47, 47, 0.9) transparent;
        }
        .dropdown li
        {
            float: left;
            width: 100%;
            height: 37px;
            background: #3a3a3a;
            display: block;
        }
        .dropdown li span
        {
            width: 100%;
            height: 37px;
            line-height: 37px;
            color: #fff;
            font-size: 0.9725em;
            text-align: center;
            text-shadow: 0 2px 2px #000;
            border-style: solid;
            border-width: 1px;
            border-color: #494949 #181818 #181818 #494949;
            display: block;
        }
        .dropdown li a:link
        {
            color: #fff;
            text-decoration: none;
        }
        .dropdown li a:visited
        {
            color: #fff;
            text-decoration: none;
        }
        .dropdown li a:hover
        {
            color: #fff;
            text-decoration: none;
        }
        .dropdown li a:active
        {
            color: #fff;
            text-decoration: none;
        }
        .dropdown li:hover
        {
            background: rgba(0, 0, 0, 0.9);
        }
    </style>
</head>
<body style="height: 100%;">
    <div class="header">
        <div class="head_bg">
            <a class="ui-title" id="popmenu">选择导航方式</a> <a class="return" href="/Branch/BranchInfo?id=@(Model.Id)">返回</a>
        </div>
        <div id="overlay">
        </div>
        <div id="win">
            <ul class="dropdown">
                <li><a href="javascript:void(0);" onclick="Drving(0)"><span>最少时间</span></a></li>
                <li><a href="javascript:void(0);" onclick="Drving(1)"><span>最短距离</span></a></li>
                <li><a href="javascript:void(0);" onclick="Drving(2)"><span>避开高速</span></a></li>
                <li><a href="javascript:void(0);" onclick="Drving(2,true)"><span>步行导航</span></a></li>
                <li><a href="javascript:void(0);" onclick="DrvingInfo()"><span>导航详细</span></a></li>
                <div class="clr">
                </div>
            </ul>
        </div>
    </div>
    <div style="width: 100%; position: relative; font-size: 12px; text-align: center;
        margin-top: 46px;">
        <div id="container_map" style="height: 100%; margin: 2px; border-radius: 5px;">
        </div>
        <script type="text/javascript" language="javascript">
        var map;
        function loadtheMap(markerName, markerContent, longitude, latitude) {
            if (longitude > 0 && latitude > 0) {
                updatelbs(markerName, markerContent, longitude, latitude);
            }
            else {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(displayLocation, handleError, { enableHighAccuracy: true, maximumAge: 1000 });
                }
                else {
                    alert("该浏览器不支持在线地图功能.");
                }
            }
        }
        //默认定位
        function displayLocation(position) {
            var markerName = '';
            var markerContent = '';
            updatelbs(markerName, markerContent, position.coords.longitude, position.coords.latitude);
        }
        //加载地图
        function updatelbs(markerName, markerContent, longitude, latitude) {
            var mapMarkerName = markerName.replace(/¶/g, "</br>");
            var mapMarkerContent = markerContent.replace(/¶/g, "</br>");
            if (!latitude || !longitude) {
                alert("当前浏览器定位不到您的具体坐标位置.");
                return;
            }
            var point = null;
            $("#container_map").height($(document).height());
            map = new BMap.Map("container_map");
            point = new BMap.Point(longitude, latitude);
            map.centerAndZoom(point, 15);
            var marker = new BMap.Marker(point);
            map.addOverlay(marker);
            if (markerName != '' || markerContent != '') {
                var opts = {
                    width: '0',     // 信息窗口宽度
                    height: '0',     // 信息窗口高度
                    title: mapMarkerName  // 信息窗口标题
                }
                var infoWindow = new BMap.InfoWindow(mapMarkerContent, opts);
                marker.openInfoWindow(infoWindow);
                marker.addEventListener("click", function () {
                    this.openInfoWindow(infoWindow);
                    infoWindow.redraw();
                });
            }
            map.enableScrollWheelZoom();
        };
        function handleError(value) {
            switch (value.code) {
                case 1:
                    alert("位置服务被拒绝");
                    break;
                case 2:
                    alert("暂时获取不到位置信息");
                    break;
                case 3:
                    alert("获取信息超时");
                    break;
                case 4:
                    alert("未知错误");
                    break;
            }
        }
        var title = "@(Model.Name)";//cst_market_title
        var content = "@(Model.Address)";//cst_market_con
        var lng = @(Model.Longitude);//cst_j_point
        var lat = @(Model.Latitude);//cst_w_point
        loadtheMap(title,content,lng,lat);
        </script>
        <script type="text/javascript">
            var oWin = document.getElementById("win");
            var oLay = document.getElementById("overlay");
            var oBtn = document.getElementById("popmenu");
            var oClose = document.getElementById("close");
            oBtn.onclick = function () {
                oLay.style.display = "block";
                oWin.style.display = "block"
            };
            oLay.onclick = function () {
                oLay.style.display = "none";
                oWin.style.display = "none"
            }
            //                var map = new BMap.Map('container');
            //                map.centerAndZoom(new BMap.Point(116.404, 39.915), 11);
            //获取当前坐标-浏览器必须开启共享位置
            var curLong, curLa, drivingRouteOptions = 0, isWorking = false;
            var driving;
            function getLoaction(position) {
                curLong = position.coords.longitude;
                curLa = position.coords.latitude;
                if (!isWorking) {
                    //  if (!driving) {
                    map.clearOverlays();
                    driving = new BMap.DrivingRoute(map, {
                        //  onSearchComplete: function (results) {
                        //      if (driving.getStatus() == BMAP_STATUS_SUCCESS) {
                        //          // 地图覆盖物
                        //          //addOverlays(results);
                        //          // 方案描述
                        //          addText(results);
                        //      }
                        //  }, 
                        renderOptions: {
                            map: map,
                            panel: 'mapPannel',
                            enableDragging: true
                        },
                        policy: drivingRouteOptions
                    });
                    //                        }
                    //                        else { 
                    //                            
                    //                        }
                    driving.search(new BMap.Point(curLong, curLa), new BMap.Point(lng, lat));
                }
                else {
                    map.clearOverlays();
                    driving = new BMap.WalkingRoute(map, {
                        renderOptions: {
                            map: map,
                            panel: 'mapPannel',
                            enableDragging: true
                        }
                    });
                    driving.search(new BMap.Point(curLong, curLa), new BMap.Point(lng, lat));
                }
            }
            function Drving(drivingRouteOptionsNew, walking) {
                if (drivingRouteOptionsNew >= 0) {
                    oLay.style.display = "none";
                    oWin.style.display = "none";
                }
                $("#mapPannelClose").hide(); $('#mapPannel').hide();
                drivingRouteOptions = drivingRouteOptionsNew || 0;
                isWorking = walking || false;
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(getLoaction, handleError, { enableHighAccuracy: true, maximumAge: Infinity, timeout: 27000 });
                }
                else {
                    alert("该浏览器不支持在线地图功能.");
                }
            }
            Drving();
            // 添加覆盖物并设置视野
            function addOverlays(results) {
                // 自行添加起点和终点
                var start = results.getStart();
                var end = results.getEnd();
                addStart(start.point, start.title);
                addEnd(end.point, end.title);
                var viewPoints = [start.point, end.point];
                // 获取方案
                var plan = results.getPlan(0);
                // 获取方案中包含的路线
                for (var i = 0; i < plan.getNumRoutes(); i++) {
                    addRoute(plan.getRoute(i).getPath());
                    viewPoints.concat(plan.getRoute(i).getPath());
                }
                // 设置地图视野
                map.setViewport(viewPoints, {
                    margins: [40, 10, 10, 10]
                });
            }

            // 添加方案描述
            function addText(results) {
                var plan = results.getPlan(0);
                // 获取方案中包含的路线
                var htmls = [];
                for (var i = 0; i < plan.getNumRoutes(); i++) {
                    var route = plan.getRoute(i);
                    for (var j = 0; j < route.getNumSteps(); j++) {
                        var curStep = route.getStep(j);
                        htmls.push((j + 1) + '. ' + curStep.getDescription() + '<br />');
                    }
                }
                var panel = document.getElementById('panel');
                panel.innerHTML = htmls.join('');
                panel.style.lineHeight = '1.4em';
                panel.style.fontSize = '12px';
            }

            // 添加起点覆盖物
            function addStart(point, title) {
                map.addOverlay(new BMap.Marker(point, {
                    title: title,
                    icon: new BMap.Icon('blue.png', new BMap.Size(38, 41), {
                        anchor: new BMap.Size(4, 36)
                    })
                }));
            }

            // 添加终点覆盖物
            function addEnd(point, title) {
                map.addOverlay(new BMap.Marker(point, {
                    title: title,
                    icon: new BMap.Icon('red.png', new BMap.Size(38, 41), {
                        anchor: new BMap.Size(4, 36)
                    })
                }));
            }

            // 添加路线
            function addRoute(path) {
                map.addOverlay(new BMap.Polyline(path, {
                    strokeColor: '#333',
                    enableClicking: false
                }));
            }


            //driving.search(new BMap.Point(116.404, 39.915), new BMap.Point(116.389, 39.811));
            //driving.search({ title: '我的家', point: new BMap.Point(116.410, 39.915) }, { title: '你的家', point: new BMap.Point(116.400, 39.910) });

            function DrvingInfo() {
                oLay.style.display = "none";
                oWin.style.display = "none";
                $("#mapPannel").show();
                $("#mapPannelClose").show();
            }
        </script>
        <div id="mapPannel" style="display: none; position: absolute; width: 100%; top: 0;
            left: 0;">
        </div>
        <div id="mapPannelClose" onclick="$(this).hide();$('#mapPannel').hide();" style="position: relative;
            display: none; position: absolute; width: 80px; top: 0; right: 0;">
            <span class="return" style="position: absolute; margin-right: 0px;">关闭</span>
        </div>
    </div>
</body>
</html>
