@{
    Layout = null;
}
@model Ocean.Entity.Branch
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<html>
<head>
    <title>附近的石狮农商银行</title>
    <meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8">
    <meta content="initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <meta content="yes" name="apple-mobile-web-app-capable">
    <style type="text/css">
        BODY
        {
            margin: 0px;
            width: 100%;
            height: 100%;
        }
        HTML
        {
            margin: 0px;
            width: 100%;
            height: 100%;
        }
        #allmap
        {
            margin: 0px;
            overflow: hidden;
            width: 100%;
            height: 100%;
        }
        header
        {
            background: #ddd;
            overflow: hidden;
            border-bottom: #115b76 1px solid;
            position: relative;
            height: 37px;
            box-shadow: #999 0 5px 5px;
        }
        header TABLE
        {
            width: 150px;
            text-align: center;
        }
        BUTTON
        {
            border-right: #aaa 1px solid;
            border-top: #aaa 1px solid;
            font-size: 14px;
            border-left: #aaa 1px solid;
            width: 100%;
            border-bottom: #aaa 1px solid;
            height: 30px;
            text-shadow: #fff 1px 1px 1px;
        }
        .botton
        {
        }
        INPUT
        {
            padding-right: 5px;
            padding-left: 5px;
            font-size: 12px;
            padding-bottom: 5px;
            padding-top: 5px;
        }
        .bottom-tab TD
        {
            width: 33.33%;
        }
        .bottom-tab TD INPUT
        {
            border-right: #fff 1px solid;
            border-top: #fff 1px solid;
            background: #999;
            border-left: #fff 1px solid;
            width: 100%;
            color: #fff;
            border-bottom: #fff 1px solid;
        }
        .bottom-tab .td INPUT
        {
            border-right: #666 1px solid;
            border-top: #666 1px solid;
            background: #fff;
            border-left: #666 1px solid;
            width: 100%;
            color: #666;
            border-bottom: #666 1px solid;
        }
    </style>
    <script type="text/javascript" src="@Url.Content("~/Content/javascripts/api.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/javascripts/convertor.js")"></script>
    <meta content="MSHTML 6.00.2900.6347" name="GENERATOR">
</head>
<body>
    <header id="tab">
<TABLE style="WIDTH: 100%">
  <TBODY>
  <TR>
    <TD>
      <DIV align=right><BUTTON class="botton " id=botton-1 style="WIDTH: 80px" 
      onclick=hiddenRoute()>地图</BUTTON></DIV></TD>
    <TD>
      <DIV align=left><BUTTON id=botton-2 style="WIDTH: 80px" 
      onclick=hiddenMap()>路线</BUTTON></DIV></TD></TR></TBODY></TABLE></header>
    <div id="allMap" style="height: 90%">
    </div>
    <div id="routeDiv" style="display: none; width: 100%; text-align: center">
        <table class="bottom-tab" style="background: #ddd; width: 100%; height: 70px">
            <tbody>
                <tr id="tab-3">
                    <td class="td">
                        <input id="buxing" onclick="buxingFunction()" type="button" value="步行路线" name="buxing">
                    </td>
                    <td>
                        <input id="gongjiao" onclick="gongjiaoFunction()" type="button" value="最佳公交路线" name="gongjiao">
                    </td>
                    <td>
                        <input id="zijia" onclick="zijiaFunction()" type="button" value="最佳自驾路线" name="zijia">
                    </td>
                </tr>
            </tbody>
        </table>
        <div id="r-result" style="font-size: 14px; overflow: scroll; height: 90%">
        </div>
    </div>
    <script type="text/javascript">
        //微信客户经纬度坐标地点
        var longitude = "@(ViewBag.longitude)";
        var latitude = "@(ViewBag.latitude)";
        //设置地图层级
        var zoom = 14;
        //微信客户坐标初始化
        var point = new BMap.Point(longitude, latitude);
        //实例化Google坐标参数(因微信返回坐标为Google，故在此转换)
        var ggPoint = new BMap.Point(longitude, latitude);
        //-----------------------------------------------------------
        //目标地址的坐标和初始化坐标地点40.036159704976,116.219294630122
        var targetAddressLongitude = "@(Model.Longitude)";
        var targetAddressLatitude = "@(Model.Latitude)";
        var targetAddressPoint = new BMap.Point(targetAddressLongitude,
			targetAddressLatitude);
        //-----------------------------------------------------------
        //查找目标地点名称
        var findAddress = "@(Model.Name)";

        //公交路线查询参数,步行路线查询参数,自驾车查询,目标位置的提示信息,所在位置的圆,定位圆心
        var transit, walking, driving, targetAddressLabel, circle, marker;
        //---------------以上初始化数据完成--------------------------------
        //-----------------------------------------------------------
        //创建百度地图，必须指向一个DIV的ID
        var map = new BMap.Map("allMap");
        //添加当前的经纬度，14（1公里）参数为地图的缩放比例116.419, 39.915
        map.centerAndZoom(point, zoom);
        //百度地图的移动和缩放的控件
        map.addControl(new BMap.NavigationControl());
        //显示地图当前缩放尺寸
        map.addControl(new BMap.ScaleControl());
        //启用滚轮放大缩小
        //map.enableScrollWheelZoom();
        //启用双指操作缩放
        map.enablePinchToZoom();
        //将GOOGLE地图坐标转换为百度坐标
        BMap.Convertor.translate(ggPoint, 2, function (points) {
            //将Google坐标转化为百度坐标并移动到当前所在坐标
            map.panTo(points);
            //设置圆覆盖面，定位自己500M以内的位置
            circle = new BMap.Circle(points);
            point = points;
            //圆心半径代码
            circle.setRadius(500);
            //设置圆的边框透明度
            circle.setStrokeColor(0);
            //设置内圆的颜色
            circle.setFillColor("#3a6bdb");
            //将圆形覆盖物增加到地图中
            map.addOverlay(circle);
            var myIcon = new BMap.Icon("http://api.map.baidu.com/img/markers.png",
				new BMap.Size(23, 25), {
				    offset: new BMap.Size(10, 25), // 指定定位位置  
				    imageOffset: new BMap.Size(1, -50 - 10 * 25)
				    // 设置图片偏移  
				});
            marker = new BMap.Marker(points, {
                icon: myIcon
            });
            // 将标注添加到地图中
            map.addOverlay(marker);
            var mylabel = new BMap.Label("您的位置", {
                offset: new BMap.Size(20, -10)
            });
            marker.setLabel(mylabel); //添加百度label


        });
        BMap.Convertor.translate(targetAddressPoint, 2, function (points) {
            map.panTo(points);
            targetAddressPoint = points;
            var markerk = new BMap.Marker(points);
            map.addOverlay(markerk);
            targetAddressLabel = new BMap.Label("【" + findAddress + "】", {
                offset: new BMap.Size(20, -10)
            });
            markerk.setLabel(targetAddressLabel); //添加百度label
        });


        //----------------加载页面后的地图呈现完成---------------------------------------------	
        //自驾车路线
        function zijiaFunction() {
            clearAddressInfo();
            //showLoad("zijia");
            targetAddressLabel.setContent("【" + findAddress + "】");
            if (!driving) {
                driving = new BMap.DrivingRoute(map, {
                    renderOptions: {
                        map: map,
                        panel: "r-result",
                        autoViewport: true
                    }
                });
            }
            driving.search(point, targetAddressPoint);
        }
        //公交路线
        function gongjiaoFunction() {
            clearAddressInfo();
            //showLoad("gongjiao");
            if (!transit) {
                transit = new BMap.TransitRoute(map, {
                    renderOptions: {
                        map: map, panel: "r-result",
                        autoViewport: true
                    },
                    policy:
                    //BMAP_TRANSIT_POLICY_AVOID_SUBWAYS   
			BMAP_TRANSIT_POLICY_LEAST_TIME //最少时间。
                    //BMAP_TRANSIT_POLICY_LEAST_TRANSFER	最少换乘。
                    //BMAP_TRANSIT_POLICY_LEAST_WALKING	最少步行。
                    //BMAP_TRANSIT_POLICY_AVOID_SUBWAYS	不乘地铁。(自 1.2 新增)
                    //onSearchComplete : searchComplete
                });
            }
            transit.search(point, targetAddressPoint);
        }
        //步行路线
        function buxingFunction() {
            clearAddressInfo();
            //showLoad("buxing");
            targetAddressLabel.setContent("【" + findAddress + "】");
            if (!walking) {
                walking = new BMap.WalkingRoute(map, {
                    renderOptions: {
                        map: map,
                        panel: "r-result",
                        autoViewport: true
                    }
                });
            }
            walking.search(point, targetAddressPoint);
        }
        //公交最佳路线提示信息
        //function searchComplete(results) {
        //	if (transit.getStatus() != BMAP_STATUS_SUCCESS) {
        //		return;
        //	}
        //	var s = results.getPlan(0).getDescription();
        //	s = s.replace(/\<b>/g, "");
        //	s = s.replace(/\<\/b>/g, "");
        //	document.getElementById("r-result").innerText = s;
        //	var plan = results.getPlan(0);
        //	var output = "到达【" + findAddress + "】需要";
        //	output += plan.getDuration(true) + "\n"; //获取时间
        //	output += plan.getDistance(true) + "\n"; //获取距离
        //	targetAddressLabel.setContent(output);
        //}

        //清除自驾车，公交，步行的路线信息d
        function clearAddressInfo() {
            if (driving)
                driving.clearResults();
            if (transit)
                transit.clearResults();
            if (walking)
                walking.clearResults();
            var resultDiv = document.getElementById("r-result");
            resultDiv.innerText = "";
            resultDiv.innerHtml = "";
        }
        //隐藏路线DIV
        function hiddenRoute() {
            var routeObject = document.getElementById("routeDiv");
            routeObject.style.display = 'none';
            var mapObject = document.getElementById("allMap");
            mapObject.style.display = '';
            var botton = document.getElementById("botton-1");
            botton.className = botton.className + "botton ";
            var botton1 = document.getElementById("botton-2");
            botton1.className = " 1 ";
            map.setZoom(zoom);
            setTimeout(function () { map.panTo(point); }, 100);
        }
        //隐藏地图DIV
        function hiddenMap() {
            var mapObject = document.getElementById("allMap");
            mapObject.style.display = 'none';
            var routeObject = document.getElementById("routeDiv");
            routeObject.style.display = '';
            var botton = document.getElementById("botton-2");
            botton.className = botton.className + "botton ";
            var botton1 = document.getElementById("botton-1");
            botton1.className = " 1 ";
        }
        //显示等待的滚动提醒
        function showLoad(id) {
            var resultDiv = document.getElementById(id);
            resultDiv.disabled = "true";
            setTimeout(function () {
                resultDiv.disabled = "";
            }, 30000);
        }
    </script>
    <script type="text/javascript">
        var tabs = document.getElementById("tab-3").getElementsByTagName("td");
        for (var i = 0; i < tabs.length; i++) {
            tabs[i].onclick = function () {
                change(this);
            }
        }
        function change(obj) {
            for (var i = 0; i < tabs.length; i++) {
                if (tabs[i] == obj) {
                    tabs[i].className = "td";
                }
                else {
                    tabs[i].className = "";
                }
            }
        }
    </script>
</body>
</html>