//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
// </auto-generated>
//
// <copyright file="Plugin.cs">
//		Copyright(c)2014 Ocean.All rights reserved.
//		CLR版本：4.0.30319.239
//		生成时间：2014-02-22 14:36
// </copyright>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity.ModelConfiguration;
using System.ComponentModel.DataAnnotations.Schema;
using Ocean.Entity;
using Ocean.Entity;

namespace Ocean.Entity
{
    /// <summary>
    /// 实体类-数据表映射——
    /// </summary>    
	public partial class PluginMap : EntityTypeConfiguration<Plugin>
    {
        /// <summary>
        /// 实体类-数据表映射构造函数——Plugin
        /// </summary>
        public PluginMap()
        {
			// 主键
            this.HasKey(p => p.Id);
			this.Property(p => p.Id).HasColumnName("Id").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
			this.Property(p => p.CreateDate).HasColumnName("CreateDate");
			// 表 & 列映射
            this.ToTable("Plugin");
			//属性
			this.Property(p => p.PluginBaseId).HasColumnName("PluginBaseId");
			this.Property(p => p.Name).HasColumnName("Name");
			this.Property(p => p.IsShow).HasColumnName("IsShow");
			this.Property(p => p.IsOpen).HasColumnName("IsOpen");
			this.Property(p => p.CategoryId).HasColumnName("CategoryId");
			this.Property(p => p.LanguageId).HasColumnName("LanguageId");
			this.Property(p => p.StyleId).HasColumnName("StyleId");
			this.Property(p => p.StyleFolder).HasColumnName("StyleFolder");
			this.Property(p => p.Value).HasColumnName("Value");
			this.Property(p => p.Sort).HasColumnName("Sort");
			this.Property(p => p.StartDate).HasColumnName("StartDate");
			this.Property(p => p.EndDate).HasColumnName("EndDate");

            this.HasRequired(p => p.RPluginBaseStyle).WithMany().HasForeignKey(ps=>ps.StyleId).WillCascadeOnDelete(false);//Map(ps=>ps.MapKey("StyleId"))
            this.HasRequired(p => p.RPluginBase).WithMany().HasForeignKey(pb=>pb.PluginBaseId).WillCascadeOnDelete(false);
        }
    }
}
