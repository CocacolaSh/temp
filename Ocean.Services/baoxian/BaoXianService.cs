//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
// </auto-generated>
//
// <copyright file="PluginBase.cs">
//		Copyright(c)2014 Ocean.All rights reserved.
//		CLR版本：4.0.30319.239
//		生成时间：2014-02-22 14:37
// </copyright>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Ocean.Entity;
using Ocean.Core.Data;
using Ocean.Data;
using Ocean.Core;
using Ocean.Entity.DTO;


namespace Ocean.Services
{
    public class BaoXianService : ServiceBase<BaoXian>, IBaoXianService
    {
        public BaoXianService(IRepository<BaoXian> baoDanRepository, IDbContext context)
            : base(baoDanRepository, context)
        {
        }


        public OceanDynamicList<object> GetPageDynamicList(int pageIndex, int pageSize, BaoXianDTO baodanDTO, int isAll)
        {
            string condition = "";
            Dictionary<string, object> parms = new Dictionary<string, object>();
            if (!string.IsNullOrEmpty(baodanDTO.TouBaoGongSi))
            {
                parms.Add("TouBaoGongSi", baodanDTO.TouBaoGongSi);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "TouBaoGongSi=@TouBaoGongSi";
            }
            if (!string.IsNullOrEmpty(baodanDTO.TouBaoRen))
            {
                parms.Add("TouBaoRen", baodanDTO.TouBaoRen);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "TouBaoRen like '%'+@TouBaoRen+'%'";
            }
            if (baodanDTO.StartDate.HasValue)
            {
                parms.Add("StartDate", baodanDTO.StartDate);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "f.QiBaoDate >= @StartDate";
            }
            if (baodanDTO.EndDate.HasValue)
            {
                parms.Add("EndDate", baodanDTO.EndDate);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "f.QiBaoDate <= @EndDate";
            }
            if (!string.IsNullOrEmpty(baodanDTO.ChePai))
            {
                parms.Add("ChePai", baodanDTO.ChePai);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "ChePai like '%'+@ChePai+'%'";
            }
            if (baodanDTO.BaoXianQiXian.HasValue)
            {
                parms.Add("BaoXianQiXian", baodanDTO.BaoXianQiXian);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "BaoXianQiXian = @BaoXianQiXian'";
            }
            if (!string.IsNullOrEmpty(baodanDTO.HouSiWei))
            {
                parms.Add("HouSiWei", baodanDTO.HouSiWei);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "HouSiWei like '%'+@HouSiWei+'%'";
            }
            if (!string.IsNullOrEmpty(baodanDTO.LaiYuan))
            {
                parms.Add("LaiYuan", baodanDTO.LaiYuan);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "LaiYuan like '%'+@LaiYuan+'%'";
            }
            if (baodanDTO.XianZhong.HasValue)
            {
                parms.Add("XianZhong", baodanDTO.XianZhong);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "XianZhong = @XianZhong'";
            }
           
            if (isAll == 0)
            {
                parms.Add("MpUserId", baodanDTO.MpUserId);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "MpUserId = @MpUserId";
            }
            return this.GetDynamicList("SELECT f.Id,f.MpUserId MpUserId,f.TouBaoGongSi,f.TouBaoRen,f.ChePai,f.QiBaoDate,f.BaoXianQiXian,f.HouSiWei,f.DengJiDate,f.BaoXianFei,f.CheChuanSui,f.LaiYuan,f.XianZhong,f.CreateDate CreateDate FROM BaoDan f " + condition + " order by f.CreateDate desc", pageIndex, pageSize, parms);
        }

    }
}
