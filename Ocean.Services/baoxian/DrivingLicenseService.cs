//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
// </auto-generated>
//
// <copyright file="PluginBase.cs">
//		Copyright(c)2014 Ocean.All rights reserved.
//		CLR版本：4.0.30319.239
//		生成时间：2014-02-22 14:37
// </copyright>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Ocean.Entity;
using Ocean.Core.Data;
using Ocean.Data;
using Ocean.Core;
using Ocean.Entity.DTO;


namespace Ocean.Services
{
    public class DrivingLicenseService : ServiceBase<DrivingLicense>, IDrivingLicenseService
    {
        public DrivingLicenseService(IRepository<DrivingLicense> DrivingLicenseRepository, IDbContext context)
            : base(DrivingLicenseRepository, context)
        {
        }

        public OceanDynamicList<object> GetPageDynamicList(int pageIndex, int pageSize, DrivingLicenseDTO drivingLicenseDTO, int isAll)
        {
            string condition = "";
            Dictionary<string, object> parms = new Dictionary<string, object>();
            if (!string.IsNullOrEmpty(drivingLicenseDTO.Name))
            {
                parms.Add("Name", drivingLicenseDTO.Name);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "f.Name=@Name";
            }
            if (!string.IsNullOrEmpty(drivingLicenseDTO.CertNo))
            {
                parms.Add("CertNo", drivingLicenseDTO.CertNo);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "CertNo like '%'+@CertNo+'%'";
            }
            if (drivingLicenseDTO.StartDate.HasValue)
            {
                parms.Add("StartDate", drivingLicenseDTO.StartDate);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "f.IssueDate >= @StartDate";
            }
            if (drivingLicenseDTO.EndDate.HasValue)
            {
                parms.Add("EndDate", drivingLicenseDTO.EndDate);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "f.IssueDate <= @EndDate";
            }
            if (!string.IsNullOrEmpty(drivingLicenseDTO.BussinesName))
            {
                parms.Add("BussinesName", drivingLicenseDTO.BussinesName);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "m.Name like '%'+@BussinesName+'%'";
            }

            if (isAll == 0)
            {
                parms.Add("MpUserId", drivingLicenseDTO.MpUserId);
                if (!string.IsNullOrEmpty(condition))
                {
                    condition += " and ";
                }
                else
                {
                    condition += " where ";
                }
                condition += "MpUserId = @MpUserId";
            }
            return this.GetDynamicList("SELECT f.Id,f.MpUserId MpUserId,f.CertNo,f.Name,f.Sex,f.Nationality,f.Address,f.Birthday,f.IssueDate,f.Class,f.ValidFrom,f.ValidFor,m.Name BussinesName,f.CreateDate CreateDate FROM DrivingLicense f left join MpUser m on  f.MpUserId = m.ID " + condition + " order by f.CreateDate desc", pageIndex, pageSize, parms);
        }

    }
}
