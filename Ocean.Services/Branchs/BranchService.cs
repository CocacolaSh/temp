//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
// </auto-generated>
//
// <copyright file="Branch.cs">
//		Copyright(c)2014 Ocean.All rights reserved.
//		CLR版本：4.0.30319.239
//		生成时间：2014-02-10 20:03
// </copyright>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Ocean.Entity;
using Ocean.Core.Data;
using Ocean.Data;
using Ocean.Core;
using Ocean.Entity.DTO;
using Ocean.Core.Data.OrderBy;
using Ocean.Core.Utility;

namespace Ocean.Services
{
    public class BranchService : ServiceBase<Branch>, IBranchService
    {
        public BranchService(IRepository<Branch> branchRepository, IDbContext context)
            : base(branchRepository, context)
        {
        }

        /// <summary>
        /// 根据搜索条件获取分页数据
        /// </summary>
        public PagedList<Branch> GetPageList(int pageIndex, int pageSize, BranchDTO branchDTO)
        {
            IQueryable<Branch> query = base.Table;

            if (!string.IsNullOrWhiteSpace(branchDTO.Name))
            {
                query = query.Where(b => b.Name.Contains(branchDTO.Name));
            }

            if (!string.IsNullOrWhiteSpace(branchDTO.Address))
            {
                query = query.Where(b => b.Address.Contains(branchDTO.Address));
            }

            if (branchDTO.Type.HasValue)
            {
                query = query.Where(b => b.Type == branchDTO.Type);
            }

            query = query.OrderByDescending("CreateDate");
            int count = query.Count();

            if (pageIndex == 1)
            {
                query = query.Take<Branch>(pageSize);
            }
            else
            {
                query = query.Skip<Branch>((pageIndex - 1) * pageSize).Take<Branch>(pageSize);
            }

            PagedList<Branch> pageItems = new PagedList<Branch>(query.ToList(), pageIndex, pageSize);
            pageItems.TotalItemCount = count;
            return pageItems;
        }

        /// <summary>
        /// 冻结管理员
        /// </summary>
        public bool FreezeBranch(Guid id)
        {
            Dictionary<string, object> dictionary = new Dictionary<string, object>();
            dictionary.Add("Id", id);
            return ExcuteSql(string.Format("Update Branch set Status=2 where Id = {0} and Status=1", "@Id"), dictionary) > 0;
        }

        /// <summary>
        /// 解冻管理员
        /// </summary>
        public bool UnFreezeBranch(Guid id)
        {
            Dictionary<string, object> dictionary = new Dictionary<string, object>();
            dictionary.Add("Id", id);
            return ExcuteSql(string.Format("Update Branch set Status=1 where Id = {0} and Status=2", "@Id"), dictionary) > 0;
        }

        /// <summary>
        /// 获取周边网点
        /// </summary>
        /// <param name="locationx">经度</param>
        /// <param name="locationy">纬度</param>
        /// <returns></returns>
        public IList<BranchDTO> GetBranch(double locationx, double locationy)
        {
            IList<Branch> listBranch = this.GetALL().Where(b => b.Status == 1).ToList();
            //计算距离
            IList<BranchDTO> listBranchDTO = new List<BranchDTO>();

            foreach (Branch branch in listBranch)
            {
                BranchDTO dtoBranch = new BranchDTO(branch);
                dtoBranch.Distance = DistanceHelper.GetDistance(locationy, locationx, double.Parse(dtoBranch.Latitude ?? "24.737727"), double.Parse(dtoBranch.Longitude ?? "118.656141"));
                listBranchDTO.Add(dtoBranch);
            }

            if (listBranchDTO != null && listBranchDTO.Count > 0)
            {
                listBranchDTO = listBranchDTO.OrderBy(b => b.Distance).ToList();
            }

            listBranchDTO = listBranchDTO.Take(8).ToList();
            return listBranchDTO;
        }
    }
}